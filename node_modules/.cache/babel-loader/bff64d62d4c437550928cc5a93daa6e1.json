{"ast":null,"code":"var _jsxFileName = \"/Users/matthewfisher/Desktop/ReactAPI/police-api-data/src/components/form.js\",\n    _s = $RefreshSig$();\n\nimport Form from 'react-bootstrap/Form';\nimport React, { useEffect, useState } from \"react\";\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserSelectionForm() {\n  _s();\n\n  const [stateForceCrime, setstateForceCrime] = useState({\n    force: \"\",\n    crime: \"\"\n  });\n  const [crimeCategorties, setCrimeCategorties] = useState([]);\n  const [neighbourhoods, setNeighbourhoods] = useState([]);\n  const [stopSearch, setStopSearch] = useState([]);\n\n  function handle(e) {\n    const data = { ...stateForceCrime\n    };\n    data[e.target.id] = e.target.value;\n    console.log(data);\n    setstateForceCrime(data);\n  }\n\n  function submit(e) {\n    e.preventDefault();\n    console.log(stateForceCrime.crime);\n    console.log(stateForceCrime.force);\n    fetch(`https://data.police.uk/api/crimes-no-location?category=${stateForceCrime.crime}&force=${stateForceCrime.force}`).then(response => {\n      return response.json();\n    }).then(data => {\n      setNeighbourhoods(data);\n    });\n  }\n\n  const policeDataCrimeCategorties = () => {\n    fetch(\"https://data.police.uk/api/crime-categories\").then(response => {\n      return response.json();\n    }).then(data => {\n      setCrimeCategorties(data);\n    });\n  };\n\n  const policeStopSearch = () => {\n    fetch(\"https://data.police.uk/api/stops-no-location?force=cleveland\").then(response => {\n      return response.json();\n    }).then(data => {\n      setStopSearch(data);\n    });\n  };\n\n  const [force, setForce] = useState([]);\n\n  const policeForces = () => {\n    fetch(\"https://data.police.uk/api/forces\").then(response => {\n      return response.json();\n    }).then(data => {\n      setForce(data);\n    });\n  };\n\n  useEffect(() => {\n    policeDataCrimeCategorties();\n    policeForces();\n  }, []);\n\n  function tableLogic(props) {\n    {\n      neighbourhoods.map(neighbourhood => /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: neighbourhood.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: neighbourhood.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: neighbourhood.month\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => submit(e),\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select a Police Force\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          id: \"force\",\n          onChange: e => handle(e),\n          children: force.map(force => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: force.id,\n            children: force.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select a Crime\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          id: \"crime\",\n          onChange: e => handle(e),\n          children: crimeCategorties.map(crimeCategorties => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: crimeCategorties.url,\n            children: crimeCategorties.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: neighbourhoods.map(neighbourhood => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: neighbourhood.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: neighbourhood.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: neighbourhood.month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UserSelectionForm, \"ouF+oViO9bUfqat7+YU0cRZtDWQ=\");\n\n_c = UserSelectionForm;\nexport default UserSelectionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSelectionForm\");","map":{"version":3,"names":["Form","React","useEffect","useState","Table","Button","UserSelectionForm","stateForceCrime","setstateForceCrime","force","crime","crimeCategorties","setCrimeCategorties","neighbourhoods","setNeighbourhoods","stopSearch","setStopSearch","handle","e","data","target","id","value","console","log","submit","preventDefault","fetch","then","response","json","policeDataCrimeCategorties","policeStopSearch","setForce","policeForces","tableLogic","props","map","neighbourhood","category","month","url"],"sources":["/Users/matthewfisher/Desktop/ReactAPI/police-api-data/src/components/form.js"],"sourcesContent":["import Form from 'react-bootstrap/Form';\nimport React, { useEffect, useState } from \"react\"\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\n\n\nfunction UserSelectionForm() {\n    \n    const [stateForceCrime, setstateForceCrime] = useState({force: \"\", crime: \"\"});\n    const [crimeCategorties, setCrimeCategorties] = useState([])\n    const [neighbourhoods, setNeighbourhoods] = useState([])\n    const [stopSearch, setStopSearch] = useState([])\n\n    function handle(e)\n    {\n        const data = {...stateForceCrime}\n        data[e.target.id] = e.target.value\n        console.log(data)\n        setstateForceCrime(data)\n    }\n\n    function submit(e)\n    {\n        e.preventDefault()\n        console.log(stateForceCrime.crime)\n        console.log(stateForceCrime.force)\n        fetch(`https://data.police.uk/api/crimes-no-location?category=${stateForceCrime.crime}&force=${stateForceCrime.force}`)\n        .then(response => {\n            return response.json()\n        })\n        .then(data => {\n            setNeighbourhoods(data)\n        })\n    }\n\n    const policeDataCrimeCategorties = () => {\n      fetch(\"https://data.police.uk/api/crime-categories\")\n        .then(response => {\n          return response.json()\n        })\n        .then(data => {\n          setCrimeCategorties(data)\n        })\n    }\n\n    const policeStopSearch = () => {\n        fetch(\"https://data.police.uk/api/stops-no-location?force=cleveland\")\n          .then(response => {\n            return response.json()\n          })\n          .then(data => {\n            setStopSearch(data)\n          })\n      }\n\n\n    const [force, setForce] = useState([])\n    const policeForces = () => {\n      fetch(\"https://data.police.uk/api/forces\")\n        .then(response => {\n          return response.json()\n        })\n        .then(data => {\n          setForce(data)\n        })\n    }\n\n    useEffect(() => {\n      policeDataCrimeCategorties();\n      policeForces();\n    }, [])       \n    \n    function tableLogic(props)\n    {\n        {neighbourhoods.map(neighbourhood => \n        <Table striped bordered hover>\n        <thead>\n            <tr>\n                <th>ID</th>\n                <th>Category</th>\n                <th>Month</th>\n            </tr>\n        </thead>\n        <tbody>\n            \n              <tr>\n                <td>{neighbourhood.id}</td>\n                <td>{neighbourhood.category}</td>\n                <td>{neighbourhood.month}</td>\n              </tr>\n        </tbody>\n    </Table>\n    )}\n\n\n    }\n\n  return (\n      <>\n      <Form onSubmit={(e)=>submit(e)}>\n      <Form.Group className=\"mb-3\">\n          <Form.Label>Select a Police Force</Form.Label>\n          <Form.Select id=\"force\" onChange={(e)=>handle(e)}>\n              {force.map(force => (\n                  <option value={force.id}>{force.id}</option>\n              ))}\n          </Form.Select>\n          <Form.Label>Select a Crime</Form.Label>\n          <Form.Select id=\"crime\" onChange={(e)=>handle(e)}>\n              {crimeCategorties.map(crimeCategorties => (\n                  <option value={crimeCategorties.url}>{crimeCategorties.url}</option>\n              ))}\n          </Form.Select>\n          <Button type=\"submit\" >Submit</Button>\n      </Form.Group>\n      </Form>\n      <div>\n\n      </div>\n        \n        <Table striped bordered hover>\n        <thead>\n            <tr>\n                <th>ID</th>\n                <th>Category</th>\n                <th>Month</th>\n            </tr>\n        </thead>\n        <tbody>\n        {neighbourhoods.map(neighbourhood => (\n              <tr>\n                <td>{neighbourhood.id}</td>\n                <td>{neighbourhood.category}</td>\n                <td>{neighbourhood.month}</td>\n              </tr>\n        ))}\n        </tbody>\n    </Table>\n    </>\n  );\n}\nexport default UserSelectionForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}