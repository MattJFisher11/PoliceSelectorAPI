{"ast":null,"code":"var _jsxFileName = \"/Users/matthewfisher/Desktop/ReactAPI/police-api-data/src/components/form.js\",\n    _s = $RefreshSig$();\n\nimport Form from 'react-bootstrap/Form';\nimport React, { useEffect, useState } from \"react\";\nimport Table from 'react-bootstrap/Table';\nimport { Button } from 'bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserSelectionForm() {\n  _s();\n\n  const [stateForces, setStateForces] = useState([]);\n\n  const handleChangeForces = e => {\n    setStateForces(e.target.value);\n  };\n\n  const [stateCrime, setStateCrime] = useState([]);\n\n  const handleChangeCrime = e => {\n    setStateCrime(e.target.value);\n  };\n\n  const [crimeCategorties, setCrimeCategorties] = useState([]);\n\n  const policeDataCrimeCategorties = () => {\n    fetch(\"https://data.police.uk/api/crime-categories\").then(response => {\n      return response.json();\n    }).then(data => {\n      setCrimeCategorties(data);\n    });\n  }; // if (crimeCategorties && stateCrime !== undefined)\n  // {\n  //     policeData();\n  // }\n\n\n  const [force, setForce] = useState([]);\n\n  const policeForces = () => {\n    fetch(\"https://data.police.uk/api/forces\").then(response => {\n      return response.json();\n    }).then(data => {\n      setForce(data);\n    });\n  };\n\n  const [neighbourhoods, setNeighbourhoods] = useState([]);\n\n  const policeData = () => {\n    fetch(`https://data.police.uk/api/crimes-no-location?category=${stateCrime}&force=${stateForces}`).then(response => {\n      return response.json();\n    }).then(data => {\n      setNeighbourhoods(data);\n    });\n  };\n\n  console.log(neighbourhoods);\n  useEffect(() => {\n    policeDataCrimeCategorties();\n    policeForces();\n    policeData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        onSubmit: policeData(),\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select a Crime\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          onChange: handleChangeForces,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: `You selected ${stateCrime}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), force.map(force => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: force.id,\n            children: force.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select a Police Force\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          onChange: handleChangeCrime,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: `You selected ${stateForces}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), crimeCategorties.map(crimeCategorties => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: crimeCategorties.name,\n            children: crimeCategorties.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: neighbourhoods.map(neighbourhood => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: neighbourhood.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: neighbourhood.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: neighbourhood.month\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UserSelectionForm, \"GYZ6KjvIYH31ynfDYWmEaPyzSi0=\");\n\n_c = UserSelectionForm;\nexport default UserSelectionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSelectionForm\");","map":{"version":3,"names":["Form","React","useEffect","useState","Table","Button","UserSelectionForm","stateForces","setStateForces","handleChangeForces","e","target","value","stateCrime","setStateCrime","handleChangeCrime","crimeCategorties","setCrimeCategorties","policeDataCrimeCategorties","fetch","then","response","json","data","force","setForce","policeForces","neighbourhoods","setNeighbourhoods","policeData","console","log","map","id","name","neighbourhood","category","month"],"sources":["/Users/matthewfisher/Desktop/ReactAPI/police-api-data/src/components/form.js"],"sourcesContent":["import Form from 'react-bootstrap/Form';\nimport React, { useEffect, useState } from \"react\"\nimport Table from 'react-bootstrap/Table';\nimport { Button } from 'bootstrap';\n\n\nfunction UserSelectionForm() {\n    \n    const [stateForces, setStateForces] = useState([]);\n    const handleChangeForces = (e) => {\n      setStateForces(e.target.value);\n    };\n    const [stateCrime, setStateCrime] = useState([]);\n    const handleChangeCrime = (e) => {\n      setStateCrime(e.target.value);\n    };\n       \n\n\n    const [crimeCategorties, setCrimeCategorties] = useState([])\n    const policeDataCrimeCategorties = () => {\n      fetch(\"https://data.police.uk/api/crime-categories\")\n        .then(response => {\n          return response.json()\n        })\n        .then(data => {\n          setCrimeCategorties(data)\n        })\n    }\n\n    // if (crimeCategorties && stateCrime !== undefined)\n    // {\n    //     policeData();\n    // }\n  \n    const [force, setForce] = useState([])\n    const policeForces = () => {\n      fetch(\"https://data.police.uk/api/forces\")\n        .then(response => {\n          return response.json()\n        })\n        .then(data => {\n          setForce(data)\n        })\n    }\n\n    const [neighbourhoods, setNeighbourhoods] = useState([])\n    const policeData = () => {\n        fetch(`https://data.police.uk/api/crimes-no-location?category=${stateCrime}&force=${stateForces}`)\n        .then(response => {\n            return response.json()\n        })\n        .then(data => {\n            setNeighbourhoods(data)\n        })\n    }\n    console.log(neighbourhoods);\n\n  \n    useEffect(() => {\n      policeDataCrimeCategorties();\n      policeForces();\n      policeData();\n    }, [])\n\n\n        \n\n  return (\n      <><><Form.Group className=\"mb-3\" onSubmit={policeData()}>\n          <Form.Label>Select a Crime</Form.Label>\n          <Form.Select onChange={handleChangeForces}>\n              <p>{`You selected ${stateCrime}`}</p>\n              {force.map(force => (\n                  <option value={force.id}>{force.name}</option>\n              ))}\n          </Form.Select>\n          <Form.Label>Select a Police Force</Form.Label>\n          <Form.Select onChange={handleChangeCrime}>\n              <p>{`You selected ${stateForces}`}</p>\n              {crimeCategorties.map(crimeCategorties => (\n                  <option value={crimeCategorties.name}>{crimeCategorties.name}</option>\n              ))}\n          </Form.Select>\n      </Form.Group>\n\n          <Table striped bordered hover>\n              <thead>\n                  <tr>\n                      <th>ID</th>\n                      <th>Category</th>\n                      <th>Month</th>\n                  </tr>\n              </thead>\n              <tbody>\n                  {neighbourhoods.map(neighbourhood => (\n                      <tr>\n                          <td>{neighbourhood.id}</td>\n                          <td>{neighbourhood.category}</td>\n                          <td>{neighbourhood.month}</td>\n                      </tr>\n                  ))}\n              </tbody>\n          </Table></>\n          <Button type=\"submit\">Submit</Button></>\n  );\n}\n\nexport default UserSelectionForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}