{"ast":null,"code":"var _jsxFileName = \"/Users/matthewfisher/Desktop/ReactAPI/police-api-data/src/components/form.js\",\n    _s = $RefreshSig$();\n\nimport Form from 'react-bootstrap/Form';\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserSelectionForm() {\n  _s();\n\n  const [stateForces, setStateForces] = useState([]);\n\n  const handleChangeForces = e => {\n    setStateForces(e.target.value);\n  };\n\n  const [stateCrime, setStateCrime] = useState([]);\n\n  const handleChangeCrime = e => {\n    setStateCrime(e.target.value);\n  };\n\n  const [crimeCategorties, setCrimeCategorties] = useState([]);\n\n  const policeDataCrimeCategorties = () => {\n    fetch(\"https://data.police.uk/api/crime-categories\").then(response => {\n      return response.json();\n    }).then(data => {\n      setCrimeCategorties(data);\n    });\n  };\n\n  const [force, setForce] = useState([]);\n\n  const policeForces = () => {\n    fetch(\"https://data.police.uk/api/forces\").then(response => {\n      return response.json();\n    }).then(data => {\n      setForce(data);\n    });\n  }; // const policeData = () => {\n  //   fetch(\"https://data.police.uk/api/leicestershire/neighbourhoods\")\n  //     .then(response => {\n  //       return response.json()\n  //     })\n  //     .then(data => {\n  //       setNeighbourhoods(data)\n  //     })\n  // }\n\n\n  const [neighbourhoods, setNeighbourhoods] = useState([]);\n\n  const policeData = () => {\n    fetch(`https://data.police.uk/api/crimes-no-location?category=${stateCrime}&force=${stateForces}`).then(response => {\n      return response.json();\n    }).then(data => {\n      setNeighbourhoods(data);\n    });\n  }; // const [users, setUsers] = useState([])\n  // const fetchData = e => {\n  //   const query = e.target.value\n  //   fetch(`https://jsonplaceholder.typicode.com/users?q=${query}`)\n  //     .then(response => {\n  //       return response.json()\n  //     })\n  //     .then(data => {\n  //       setUsers(data)\n  //     })\n  // }\n\n\n  useEffect(() => {\n    policeDataCrimeCategorties();\n    policeForces();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Select a Crime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        children: force.map(force => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: force.id,\n          children: force.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Select a Police Force\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        children: crimeCategorties.map(crimeCategorties => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: crimeCategorties.name,\n          children: crimeCategorties.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(UserSelectionForm, \"GYZ6KjvIYH31ynfDYWmEaPyzSi0=\");\n\n_c = UserSelectionForm;\nexport default UserSelectionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSelectionForm\");","map":{"version":3,"names":["Form","React","useEffect","useState","UserSelectionForm","stateForces","setStateForces","handleChangeForces","e","target","value","stateCrime","setStateCrime","handleChangeCrime","crimeCategorties","setCrimeCategorties","policeDataCrimeCategorties","fetch","then","response","json","data","force","setForce","policeForces","neighbourhoods","setNeighbourhoods","policeData","map","id","name"],"sources":["/Users/matthewfisher/Desktop/ReactAPI/police-api-data/src/components/form.js"],"sourcesContent":["import Form from 'react-bootstrap/Form';\nimport React, { useEffect, useState } from \"react\"\n\n\nfunction UserSelectionForm() {\n    \n    const [stateForces, setStateForces] = useState([]);\n  \n    const handleChangeForces = (e) => {\n      setStateForces(e.target.value);\n    };\n    const [stateCrime, setStateCrime] = useState([]);\n  \n    const handleChangeCrime = (e) => {\n      setStateCrime(e.target.value);\n    };\n  \n  \n    const [crimeCategorties, setCrimeCategorties] = useState([])\n    const policeDataCrimeCategorties = () => {\n      fetch(\"https://data.police.uk/api/crime-categories\")\n        .then(response => {\n          return response.json()\n        })\n        .then(data => {\n          setCrimeCategorties(data)\n        })\n    }\n  \n    const [force, setForce] = useState([])\n    const policeForces = () => {\n      fetch(\"https://data.police.uk/api/forces\")\n        .then(response => {\n          return response.json()\n        })\n        .then(data => {\n          setForce(data)\n        })\n    }\n  \n    \n  \n    // const policeData = () => {\n    //   fetch(\"https://data.police.uk/api/leicestershire/neighbourhoods\")\n    //     .then(response => {\n    //       return response.json()\n    //     })\n    //     .then(data => {\n    //       setNeighbourhoods(data)\n    //     })\n    // }\n    const [neighbourhoods, setNeighbourhoods] = useState([])\n    const policeData = () => {\n      fetch(`https://data.police.uk/api/crimes-no-location?category=${stateCrime}&force=${stateForces}`)\n        .then(response => {\n          return response.json()\n        })\n        .then(data => {\n          setNeighbourhoods(data)\n        })\n    }\n  \n    \n    // const [users, setUsers] = useState([])\n    // const fetchData = e => {\n    //   const query = e.target.value\n    //   fetch(`https://jsonplaceholder.typicode.com/users?q=${query}`)\n    //     .then(response => {\n    //       return response.json()\n    //     })\n    //     .then(data => {\n    //       setUsers(data)\n    //     })\n    // }\n  \n    useEffect(() => {\n      policeDataCrimeCategorties();\n      policeForces();\n    }, [])\n\n\n  return (\n    <>\n      <Form.Group className=\"mb-1\">\n      <Form.Label>Select a Crime</Form.Label>\n        <Form.Select>\n        {force.map(force => (\n                  <option value={force.id}>{force.name}</option>\n                ))}\n        </Form.Select>\n        <Form.Label>Select a Police Force</Form.Label>\n        <Form.Select>\n        {crimeCategorties.map(crimeCategorties => (\n                  <option value={crimeCategorties.name}>{crimeCategorties.name}</option>\n                ))}\n        </Form.Select>\n      </Form.Group>\n    </>\n  );\n}\n\nexport default UserSelectionForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}